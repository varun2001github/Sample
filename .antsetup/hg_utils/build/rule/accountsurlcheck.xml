<?xml version="1.0" encoding="UTF-8" ?>
<!--$Id$-->


<project name="urllist">
    <taskdef resource="com/zoho/integ/ant/UrlCheck.properties">
      <classpath>
        <pathelement location="${basedir}/hg_utils/build/precheck/lib/precheck.jar"/> 
        <pathelement location="${basedir}/hg_utils/build/precheck/lib/json.jar"/>
      </classpath>
    </taskdef>

<property name="precheck_prop_file" value="${basedir}/precheck.properties"/>

<!-- ======================================================================
                                            PreCheck Task
====================================================================== -->

<target name="accountscheck">
    <delete file="${precheck_prop_file}"/>
    <antcall target="urllist"/>
    <urlCheckTask message="${precheck_prop_file}" returnMessage="val">
    </urlCheckTask>
    
    <if>
        <not>
        <equals arg1="${val}" arg2="null"/>
        </not>
    <then>
        <echo message="Zoho account check validation failed"/>
        <!--mail mailhost="smtp" mailport="25" subject="Accounts check notification"  charset="utf-8">
            <from address="integration-team@zohocorp.com"/>
            <to address="cm-notify@zohocorp.com"/>
            <message>
               Dear Team,

                     ${val}

                     ProductName: ${product_name} 


               Thanks and Regards,
               Integration-Team.
         </message>
        </mail--> 
    </then></if>
 
</target>
<!-- ============================================================================
   CALLING ALL TARGETS IN ORDER
 =========================================================================-->

<target name="urllist">
<stopwatch name="total_time" action="start"/>

<if>
 <isset property="target"/>
 <then>
    <propertycopy name="build_order" from="${target}_order" silent="true"/>
 </then>
 <else>
    <propertycopy name="build_order" from="local_order" silent="true"/>
 </else>
</if>
<echo message="calltarget :${target}"/>
<echo message="target order:${build_order}"/>

<property name="geturl_tasks" value=""/>
<for list="${build_order}" param="target">
<sequential>
    <!--echo>Target @{target}</echo-->
    <var name="suborder" unset="true"/>
    <propertycopy name="suborder" from="@{target}_order" silent="true"/>

    <for list="${suborder}" param="prop">
        <sequential>
            <!--echo>Task @{prop}</echo-->
            <var name="task" unset="true"/>
            <var name="param" unset="true"/>

            <propertyregex property="task"
                            input="@{prop}"
                            regexp="(.*):"
                            select="\1"
                            casesensitive="false" /> 

            <propertyregex property="param"
                            input="@{prop}"
                            regexp=":(.*)"
                            select="\1"
                            casesensitive="false" />

            <!--echo message="Task ${task} : ${param}"/-->

            <if>
                <equals arg1="${task}" arg2="geturl"/>
                    <then>
                        <var name="url" unset="true"/>

                        <propertycopy name="url" from="${param}_url" silent="true"/>
                        <if>
                           <not>
                               <isset property="url" />
                           </not>
			   <then>
                               <propertycopy name="url" from="${param}_download_url" silent="true"/>
                           </then>
                        </if>
                        <echo message="${param}_url=${url}${line.separator}" file="${precheck_prop_file}" append="yes"/>
                        <property name="geturl_tasks_tmp" value="${geturl_tasks},${param}"/>
                        <var name="geturl_tasks" unset="true"/>
                        <property name="geturl_tasks" value="${geturl_tasks_tmp}"/>
                        <var name="geturl_tasks_tmp" unset="true"/>
                    </then>
                </if>

                <if>
                    <equals arg1="${task}" arg2="securityschemavalidation"/>
                    <then>
                        <echo message="Security checks exists ${line.separator}"  file= "${precheck_prop_file}" append="yes"/>
                        <propertycopy name="securitycheck" from="${param}_fileset_dir" silent="true"/>
                        <echo message="${param}_fileset_dir=${securitycheck}${line.separator}" file= "${precheck_prop_file}" append="yes"/>
                        <property name="schema_validation_tasks" value="${param}"/>
                    </then>
                </if>  

                <if>
                    <equals arg1="${task}" arg2="getdep"/>
                    <then>
                        <var name="url" unset="true"/>
                        <propertycopy name="url" from="${param}_urls" silent="true"/>
                        <echo message="${task}${line.separator}" file="${precheck_prop_file}" append="yes"/>
                        <echo message="${param}_urls=${url}${line.separator}" file="${precheck_prop_file}" append="yes"/>
                        
                        <for list="${url}" delimiter="," param = "val">
                            <sequential>
                                <propertycopy name="@{val}" from="@{val}=" silent="true"/>
                                <echo message="@{val}_url=${@{val}}${line.separator}" file="${precheck_prop_file}" append="yes"/>
                            </sequential>
                        </for>
                    </then>
                </if>
                 

            </sequential>
        </for>
    </sequential>
</for>
<propertyregex property="new_geturl_tasks" input="${geturl_tasks}" regexp="^," replace=""/>
<if>
    <isset property="new_geturl_tasks" />
    <then>
        <echo message="geturltask_list=${new_geturl_tasks}${line.separator}" file="${precheck_prop_file}" append="yes"/>
    </then>
</if>
<echo message="securityschemavalidation_check=${schema_validation_tasks}${line.separator}" file="${precheck_prop_file}" append="yes"/>

</target>

</project>
