<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:attributeGroup name="urlGroup">
      <xs:attribute name="authentication">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="required|optional|public"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="xframe-type">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="deny|none|sameorigin"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>      
      <xs:attribute name="enable-content-type" type="xs:boolean"/>
      <xs:attribute name="enable-download-option" type="xs:boolean"/>
      <xs:attribute name="xss-protection-type">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="0|1|1;mode=block"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>      
      <xs:attribute name="method">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="(get|put|post|delete|options)(,get|,put|,post|,delete|,options){0,4}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="scoped-services" type="xs:string"/>
      <xs:attribute name="api" type="xs:boolean"/>
      <xs:attribute name="isc" type="xs:boolean"/>
      <xs:attribute name="iscscope"/>
      <xs:attribute name="apiscope"/>
      <xs:attribute name="runas-groupid-param"/>
      <xs:attribute name="ipbl" type="xs:boolean"/>
      <xs:attribute name="xss" type="xs:boolean"/>
      <xs:attribute name="csrf" type="xs:boolean"/>
      <xs:attribute name="decrypt" type="xs:boolean"/>
      <xs:attribute name="login-throwerror" type="xs:boolean"/>
      <xs:attribute name="description"/>
      <xs:attribute name="operation-type"/>
      <xs:attribute name="duration" type="xs:integer"/>
      <xs:attribute name="https" type="xs:boolean"/>
      <xs:attribute name="internal" type="xs:boolean"/>
      <xs:attribute name="hip" type="xs:boolean"/>
      <xs:attribute name="dynamic-params" type="xs:boolean"/>
      <xs:attribute name="lock-period" type="xs:integer"/>
      <xs:attribute name="multi-part" type="xs:boolean"/>
      <xs:attribute name="operation-param" type="xs:NCName"/>
      <xs:attribute name="operation-value"/>
      <xs:attribute name="path" use="required"/>
      <xs:attribute name="path-regex" type="xs:boolean"/>
      <xs:attribute name="post" type="xs:boolean"/>
      <xs:attribute name="redirect"/>
      <xs:attribute name="roles"/>
      <xs:attribute name="threshold" type="xs:integer"/>
      <xs:attribute name="max-request-size" type="xs:integer"/>
      <xs:attribute name="trusted" type="xs:boolean"/>
      <xs:attribute name="user" type="xs:boolean"/>
      <xs:attribute name="throwallerrors" type="xs:boolean"/>
      <xs:attribute name="dos-cookie" type="xs:boolean"/>
  </xs:attributeGroup>

  <xs:attributeGroup name="paramGroup">
      <xs:attribute name="description"/>
      <xs:attribute name="max-len" type="xs:integer"/>
      <xs:attribute name="max-occurrences" type="xs:integer"/>
      <xs:attribute name="min-len" type="xs:integer"/>
      <xs:attribute name="min-occurrences" type="xs:integer"/>
      <xs:attribute name="name" use="required" />
      <xs:attribute name="param-name-regex" type="xs:boolean"/>
      <xs:attribute name="canonicalize" type="xs:boolean"/>
      <xs:attribute name="deltacontent" type="xs:boolean"/>
      <xs:attribute name="regex"/>
      <xs:attribute name="trim" type="xs:boolean"/>
      <xs:attribute name="split"/>
      <xs:attribute name="clearhtmltags" type="xs:boolean"/>
      <xs:attribute name="type">
        <xs:simpleType>
          <xs:restriction base="xs:string">
	       <xs:pattern value="boolean|char|short|int|long|float|double|JSONObject|JSONArray|cleartext:check|cleartext:filter|cleartext:removehtmlentities|String|xml"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="xss" type="xs:NCName"/>
      <xs:attribute name="default"/>
      <xs:attribute name="decrypt" type="xs:boolean"/>
      <xs:attribute name="salt-delimiter" type="xs:string"/>
      <xs:attribute name="salt-validity" type="xs:integer"/>
      <xs:attribute name="salt-ticket" type="xs:boolean"/>
      <xs:attribute name="secret" type="xs:string"/>
      <xs:attribute name="decrypt-label" type="xs:string"/>
      <xs:attribute name="template" type="xs:string"/>
      <xs:attribute name="filter-matched-content" type="xs:boolean"/>
      <xs:attribute name="replacement-string" type="xs:string"/>
  </xs:attributeGroup>

  <xs:attributeGroup name="inputstreamGroup">
      <xs:attribute name="description"/>
      <xs:attribute name="max-len" type="xs:integer"/>
      <xs:attribute name="min-len" type="xs:integer"/>
      <xs:attribute name="regex"/>
      <xs:attribute name="clearhtmltags" type="xs:boolean"/>
      <xs:attribute name="type">
        <xs:simpleType>
          <xs:restriction base="xs:string">
	       <xs:pattern value="boolean|char|short|int|long|float|double|JSONObject|JSONArray|cleartext:check|cleartext:filter|cleartext:removehtmlentities|String|xml"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="xss" type="xs:NCName"/>
      <xs:attribute name="default"/>
      <xs:attribute name="decrypt" type="xs:boolean"/>
      <xs:attribute name="salt-delimiter" type="xs:string"/>
      <xs:attribute name="salt-validity" type="xs:integer"/>
      <xs:attribute name="salt-ticket" type="xs:boolean"/>
      <xs:attribute name="secret" type="xs:string"/>
      <xs:attribute name="decrypt-label" type="xs:string"/>
      <xs:attribute name="template" type="xs:string"/>
      <xs:attribute name="filter-matched-content" type="xs:boolean"/>
      <xs:attribute name="replacement-string" type="xs:string"/>
  </xs:attributeGroup>

  <xs:attributeGroup name="fileGroup">
      <xs:attribute name="content-type-name" type="xs:NCName"/>
      <xs:attribute name="max-size" use="required" type="xs:integer"/>
      <xs:attribute name="name" use="required" type="xs:NCName"/>
      <xs:attribute name="import-url" type="xs:NCName"/>
      <xs:attribute name="allowed-extensions"/>
      <xs:attribute name="antivirus" type="xs:NCName"/>
      <xs:attribute name="av-threshold"  type="xs:integer"/>
      <xs:attribute name="regex"/>
      <xs:attribute name="description"/>
      <xs:attribute name="xss" type="xs:NCName"/>
      <xs:attribute name="continue-onerror" type="xs:boolean"/>
  </xs:attributeGroup>
  
  <xs:element name="security">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="proxies"/>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="content-types"/>
          <xs:element ref="defaultparams"/>
          <xs:element ref="extraparam"/>
          <xs:element ref="properties"/>
          <xs:element ref="regexes"/>
          <xs:element ref="urls"/>
          <xs:element ref="xsspatterns"/>
          <xs:element ref="jsontemplates"/>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="name"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="proxies">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="proxy"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="proxy">
    <xs:complexType>
      <xs:attribute name="path" use="required"/>
      <xs:attribute name="remote-server" use="required"/>
      <xs:attribute name="remote-path"/>
      <xs:attribute name="service-params"/>
      <xs:attribute name="path-regex" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="jsontemplates">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="jsontemplate"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="jsontemplate">
    <xs:complexType mixed="true" >
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="key"/>
      </xs:sequence>
     <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="content-types">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="content-type"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="content-type">
    <xs:complexType>
      <xs:attribute name="content-types" use="required"/>
      <xs:attribute name="name" use="required" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="defaultparams">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="param"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="extraparam">
    <xs:complexType>
      <xs:attribute name="description" type="xs:string"/>
      <xs:attribute name="max-len" type="xs:integer"/>
      <xs:attribute name="min-len"  type="xs:integer"/>
      <xs:attribute name="xss"  type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="property"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="property">
    <xs:complexType>
	  <xs:attribute name="name" use="required">
      <xs:simpleType>
       <xs:restriction base="xs:string">
	       <xs:pattern value="csrf.cookie.name|csrf.param.name|captcha.url|com.adventnet.iam.secretkey|com.adventnet.iam.cryptolendelim|use.iam|enable.timeoutmatcher|xss.enable.timeoutmatcher|timeoutmatcher.maxthreads|timeoutmatcher.timeoutinmillis|trusted.ip.pattern|upload.progress.session.variable.name|antivirus.host|antivirus.port|antivirus.numberof.persistant.connections|antivirus.readtimeout|antivirus.connection.alivetime|http.ip.black.list.dns|http.ip.white.list.dns|allow.empty.value|response.encoding|ignore.trailing.slash|enable.xssfilter.log|xss.detect.pattern|xss.detect.pattern.ext|xss.encodecheck.pattern|xss.trimctrlchars.pattern|proxy.host|proxy.port|proxy.username|proxy.password|set.csrf.cookie|ticket.cache.validity|com.adventnet.iam.internal.server|com.adventnet.iam.apikey|com.adventnet.iam.handler|service.name|login.page|logout.page|is.zuid|disable.ie.cache|disable.ie.nocache|com.adventnet.iam.security.provider|enable.ssticket|is.nonpersistentscan|internal.mailwatch.server.url|upload.filerule.connectiontimeout|upload.filerule.readtimeout|disable.apiserviceticket|enable.xsspattern.detect|enable.xframe.options|xframe.default.option|readonly.mode|enable.currentuser.cache|com.adventnet.iam.authentication.provider|enable.content.type.options|enable.download.options|default.xss.protection.type|internalrequest.privatekey|com.zoho.cs.handler|com.zoho.cs.internal.server|exclude|com.zoho.client.handler|isc.signature.expiry.time|disable.authcsrf|csrf.migration"/>
        </xs:restriction>
       </xs:simpleType>
      </xs:attribute>

      <xs:attribute name="value" use="required"/>
      <xs:attribute name="description"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="regexes">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="regex"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="regex">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="value" use="required"/>
      <xs:attribute name="description"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="urls">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="url"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="url">
    <xs:complexType mixed="true" >
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="file"/>
        <xs:element ref="param"/>
        <xs:element ref="inputstream"/>
      </xs:choice>
     <xs:attributeGroup ref="urlGroup"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="file">
    <xs:complexType>
     <xs:attributeGroup ref="fileGroup"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="xsspatterns">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="xsspattern"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="xsspattern">
    <xs:complexType mixed="true">
      <xs:attribute name="balance-html-tags" type="xs:boolean"/>
      <xs:attribute name="xss-filter-type">
      <xs:simpleType>
       <xs:restriction base="xs:string">
	       <xs:pattern  value="JTIDY|JSOUP|NEKO|ANTISAMY"/>
        </xs:restriction>
       </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="css-hyphen-prefix"/>
      <xs:attribute name="decode-flag">
      <xs:simpleType>
       <xs:restriction base="xs:string">
	       <xs:pattern  value="enable-all-decoders"/>
        </xs:restriction>
       </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="whitelist-policy" />
      <xs:attribute name="skip-output-escaping" type="xs:boolean"/>
      <xs:attribute name="extends" type="xs:NCName"/>      
      <xs:attribute name="filter-css-only" type="xs:boolean"/>
      <xs:attribute name="xss-detect-throwerror" type="xs:boolean"/>
      <xs:attribute name="insert-element-attributes"/>
      <xs:attribute name="name" use="required" type="xs:NCName"/>
      <xs:attribute name="remove-attribute-names"/>
      <xs:attribute name="remove-attribute-values"/>
      <xs:attribute name="remove-css-property"/>
      <xs:attribute name="remove-css-value"/>
      <xs:attribute name="remove-element-attributes"/>
      <xs:attribute name="remove-element-names"/>
      <xs:attribute name="allow-element-attributes"/>
      <xs:attribute name="enable-canonicalize-strict" type="xs:boolean"/>
      <xs:attribute name="enable-csssyntax-strict" type="xs:boolean"/>
      <xs:attribute name="remove-commented-css" type="xs:boolean"/>
      <xs:attribute name="html-dont-decode" type="xs:boolean"/>
      <xs:attribute name="remove-element-values"/>
      <xs:attribute name="trusted-script-domains"/>
      <xs:attribute name="whitelisted-script-domains"/>
      <xs:attribute name="jsoup-htmltags-whitelist-type"/>
      <xs:attribute name="jtidy-critical-parser-errorcodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="param">
    <xs:complexType>
      <xs:attributeGroup ref="paramGroup"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="key">
    <xs:complexType>
      <xs:attributeGroup ref="paramGroup"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="inputstream">
    <xs:complexType>
      <xs:attributeGroup ref="inputstreamGroup"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
